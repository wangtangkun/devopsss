# -*- coding: utf-8 -*-
# Generated by Django 1.11.21 on 2019-10-09 12:11
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Command',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command', models.CharField(max_length=200, verbose_name='命令')),
                ('result', models.CharField(max_length=2000, verbose_name='结果')),
                ('hosts_list', models.CharField(max_length=2000, verbose_name='执行机器')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Cron',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='计划名称')),
                ('user', models.CharField(blank=True, default='root', max_length=256, null=True, verbose_name='执行用户')),
                ('job', models.CharField(max_length=1024, verbose_name='计划')),
                ('time', models.CharField(max_length=64, verbose_name='计划任务执行的时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('note', models.CharField(blank=True, max_length=256, null=True, verbose_name='计划描述')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='主机名')),
                ('hostip', models.GenericIPAddressField(verbose_name='主机ip地址')),
                ('env', models.CharField(choices=[('0', '开发'), ('1', '测试'), ('2', '预生产'), ('3', '生产')], default='3', max_length=20, verbose_name='环境')),
                ('version', models.CharField(blank=True, max_length=50, null=True, verbose_name='系统版本')),
                ('type', models.CharField(choices=[('0', 'nginx'), ('1', 'redis'), ('2', 'db'), ('3', 'server')], default='3', max_length=20, verbose_name='类型')),
                ('user', models.CharField(blank=True, default='root', max_length=50, null=True, verbose_name='登录用户')),
                ('ssh_port', models.CharField(default=22, max_length=10, verbose_name='ssh端口')),
                ('status', models.CharField(choices=[('0', '在线'), ('1', '下线'), ('2', '维修')], default='0', max_length=2, verbose_name='状态')),
            ],
        ),
        migrations.CreateModel(
            name='Host_Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('0', '等待更新'), ('1', '更新中'), ('2', '等待测试'), ('3', '测试通过'), ('4', '更新完成'), ('5', '更新失败'), ('6', '回滚成功'), ('7', '回滚失败')], default='0', max_length=20, verbose_name='更新状态')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Host', verbose_name='发布机器')),
            ],
        ),
        migrations.CreateModel(
            name='Init',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='名称')),
                ('function', models.CharField(max_length=64, unique=True, verbose_name='初始化功能')),
                ('play_book', models.CharField(max_length=100, verbose_name='playbook路径')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'ordering': ('-create_time',),
            },
        ),
        migrations.CreateModel(
            name='InitLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('result', models.CharField(blank=True, max_length=1000, null=True, verbose_name='结果')),
                ('hosts_list', models.ManyToManyField(to='web.Host', verbose_name='执行机器')),
                ('init', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Init', verbose_name='初始化功能')),
            ],
            options={
                'ordering': ('-create_time',),
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('type', models.CharField(choices=[('0', '文件'), ('1', 'git')], default='0', max_length=20, verbose_name='更新类型')),
                ('status', models.CharField(choices=[('0', '等待更新'), ('1', '更新中'), ('2', '等待测试'), ('3', '测试通过'), ('4', '更新完成'), ('5', '更新失败'), ('6', '回滚成功'), ('7', '回滚失败')], default='0', max_length=20, verbose_name='更新状态')),
                ('version', models.CharField(blank=True, max_length=100, null=True, verbose_name='版本')),
                ('backup', models.CharField(choices=[('0', '是'), ('1', '否')], default='0', max_length=20, verbose_name='备份状态')),
                ('backup_path', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备份文件路径')),
                ('upload_path', models.CharField(blank=True, max_length=2048, null=True, verbose_name='上传文件路径')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='项目名')),
                ('path', models.CharField(max_length=200, verbose_name='项目目录')),
                ('git_path', models.CharField(max_length=200, verbose_name='git地址')),
                ('nginx_conf', models.CharField(blank=True, max_length=200, null=True, verbose_name='nginx配置文件')),
                ('language', models.CharField(choices=[('0', 'python'), ('1', 'java'), ('2', 'go'), ('3', 'php'), ('4', 'html')], default='0', max_length=20, verbose_name='语言')),
                ('domain', models.CharField(blank=True, max_length=100, null=True, verbose_name='域名')),
                ('note', models.CharField(blank=True, max_length=218, null=True, verbose_name='备注信息')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('status', models.CharField(choices=[('0', '可用'), ('1', '下线')], default='0', max_length=2, verbose_name='状态')),
            ],
            options={
                'ordering': ('-create_time',),
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='用户名称')),
                ('email', models.CharField(max_length=200, verbose_name='邮箱地址')),
                ('password', models.CharField(max_length=200, verbose_name='密码')),
                ('role', models.CharField(choices=[('0', '开发'), ('1', '测试'), ('2', '运维')], default='0', max_length=10, verbose_name='角色')),
                ('is_admin', models.CharField(choices=[('0', 'Admin'), ('1', '普通')], default='1', max_length=10, verbose_name='管理员')),
                ('is_unable', models.CharField(choices=[('0', '可用'), ('1', '不可用')], default='0', max_length=10, verbose_name='是否可用')),
                ('department', models.CharField(blank=True, max_length=10, null=True, verbose_name='部门')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.AddField(
            model_name='project',
            name='boss',
            field=models.ManyToManyField(related_name='boss', to='web.UserProfile', verbose_name='责任人'),
        ),
        migrations.AddField(
            model_name='project',
            name='dev_user',
            field=models.ManyToManyField(related_name='dev_user', to='web.UserProfile', verbose_name='研发人员'),
        ),
        migrations.AddField(
            model_name='project',
            name='nginx_host',
            field=models.ManyToManyField(related_name='nginx_host', to='web.Host', verbose_name='nginx机器'),
        ),
        migrations.AddField(
            model_name='project',
            name='ops_user',
            field=models.ManyToManyField(related_name='ops_user', to='web.UserProfile', verbose_name='运维人员'),
        ),
        migrations.AddField(
            model_name='project',
            name='server_host',
            field=models.ManyToManyField(related_name='server_host', to='web.Host', verbose_name='后端主机'),
        ),
        migrations.AddField(
            model_name='project',
            name='test_user',
            field=models.ManyToManyField(related_name='test_user', to='web.UserProfile', verbose_name='测试人员'),
        ),
        migrations.AddField(
            model_name='issue',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Project', verbose_name='发布项目'),
        ),
        migrations.AddField(
            model_name='issue',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.UserProfile', verbose_name='发布人'),
        ),
        migrations.AddField(
            model_name='init',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.UserProfile', verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='init',
            name='create_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.UserProfile', verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='host_issue',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Issue', verbose_name='更新'),
        ),
        migrations.AddField(
            model_name='cron',
            name='create_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.UserProfile', verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='cron',
            name='hosts_list',
            field=models.ManyToManyField(to='web.Host', verbose_name='执行机器'),
        ),
        migrations.AddField(
            model_name='command',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.UserProfile', verbose_name='用户'),
        ),
    ]
